{
  "address": "G5gFnuGRrLE4eXcZMvY5Fppm9Mis34AtXCo7SsvCdtZm",
  "metadata": {
    "name": "cipher_stratego",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Arcium & Anchor"
  },
  "docs": [
    "* @description\n  * The main module for the Cipher Stratego program, decorated with `#[arcium_program]`.\n  * This macro replaces Anchor's `#[program]` and is necessary for integrating\n  * with the Arcium network. All game logic instructions will be defined within this module."
  ],
  "instructions": [
    {
      "name": "initialize_game",
      "docs": [
        "* @description Initializes a new game.\n      * Creates the `Game` PDA and sets the caller as Player 1."
      ],
      "discriminator": [
        44,
        62,
        102,
        247,
        126,
        208,
        130,
        215
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "game",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  103,
                  97,
                  109,
                  101
                ]
              },
              {
                "kind": "arg",
                "path": "game_seed"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "game_seed",
          "type": "u64"
        }
      ]
    },
    {
      "name": "join_game",
      "docs": [
        "* @description Allows a second player to join an existing game.\n      *\n      * @validation\n      * - Fails if the game is not in the `AwaitingPlayer` state.\n      * - Fails if the game already has a second player.\n      * - Fails if the caller is the same as Player 1."
      ],
      "discriminator": [
        107,
        112,
        18,
        38,
        56,
        173,
        60,
        128
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "game",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  103,
                  97,
                  109,
                  101
                ]
              },
              {
                "kind": "account",
                "path": "game.game_seed",
                "account": "Game"
              }
            ]
          }
        }
      ],
      "args": []
    }
  ],
  "accounts": [
    {
      "name": "Game",
      "discriminator": [
        27,
        90,
        166,
        125,
        74,
        100,
        121,
        18
      ]
    }
  ],
  "types": [
    {
      "name": "Game",
      "docs": [
        "* @description The main PDA for a single game instance, as per the tech spec."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "players",
            "type": {
              "array": [
                "pubkey",
                2
              ]
            }
          },
          {
            "name": "turn_number",
            "type": "u64"
          },
          {
            "name": "game_state",
            "type": {
              "defined": {
                "name": "GameState"
              }
            }
          },
          {
            "name": "game_seed",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "GameState",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "AwaitingPlayer"
          },
          {
            "name": "P1Turn"
          },
          {
            "name": "P2Turn"
          },
          {
            "name": "P1Won"
          },
          {
            "name": "P2Won"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "GameAlreadyFull",
      "msg": "This game is already full."
    },
    {
      "code": 6001,
      "name": "InvalidGameState",
      "msg": "The game is not in the correct state for this action."
    },
    {
      "code": 6007,
      "name": "PlayerCannotJoinOwnGame",
      "msg": "A player cannot join a game they created."
    }
  ]
}